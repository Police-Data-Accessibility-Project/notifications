#!/usr/bin/env groovy

/*
This script runs the Github Data Requests Synchronization Operation
*/

pipeline {

    agent {
        dockerfile {
            filename 'github_data_requests_synchronize/Dockerfile'
            additionalBuildArgs '--no-cache'
            args '-e GITHUB_SYNCHRONIZE_APP_USER_EMAIL=$GITHUB_SYNCHRONIZE_APP_USER_PASSWORD -e GITHUB_SYNCHRONIZE_APP_USER_PASSWORD=$GITHUB_SYNCHRONIZE_APP_USER_PASSWORD -e BASE_ROUTE=$BASE_ROUTE'

        }
    }

    stages {
        stage('Call github requests synchronization endpoint') {
            steps {
                echo 'Calling github requests synchronization endpoint...'
                sh 'chmod -R +x *'
                sh './github_data_requests_synchronize/runner.sh'
            }
        }
    }
    post {
        failure {
            script {
                def payload = """{
                    "content": "ðŸš¨ Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}"
                }"""

                sh """
                curl -X POST -H "Content-Type: application/json" -d '${payload}' ${env.WEBHOOK_URL}
                """
            }
        }
    }
}